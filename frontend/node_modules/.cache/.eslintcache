[{"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\index.js":"1","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\App.js":"3","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\data.js":"4","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\HomeScreen.js":"5","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\ProductScreen.js":"6","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\components\\Product.js":"7","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\components\\Rating.js":"8","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\components\\LoadingBox.js":"9","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\components\\MessageBox.js":"10","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\utils.js":"11","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\Store.js":"12","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\CartScreen.js":"13","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\SigninScreen.js":"14","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\ShippingScreen.js":"15","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\components\\CheckoutSteps.js":"16","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\SignupScreen.js":"17","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\PaymentScreen.js":"18","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\PlaceOrderScreen.js":"19","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\OrderScreen.js":"20","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\OrderHistoryScreen.js":"21","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\ProfileScreen.js":"22"},{"size":917,"mtime":1678059481201,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1675777935626,"results":"25","hashOfConfig":"24"},{"size":4705,"mtime":1678228205205,"results":"26","hashOfConfig":"24"},{"size":2535,"mtime":1675991509606,"results":"27","hashOfConfig":"24"},{"size":2134,"mtime":1678235459245,"results":"28","hashOfConfig":"24"},{"size":4711,"mtime":1678056155073,"results":"29","hashOfConfig":"24"},{"size":1851,"mtime":1678230556714,"results":"30","hashOfConfig":"24"},{"size":1433,"mtime":1675972611679,"results":"31","hashOfConfig":"24"},{"size":234,"mtime":1676907494608,"results":"32","hashOfConfig":"24"},{"size":489,"mtime":1678144428598,"results":"33","hashOfConfig":"24"},{"size":155,"mtime":1676911113706,"results":"34","hashOfConfig":"24"},{"size":2483,"mtime":1677613782137,"results":"35","hashOfConfig":"24"},{"size":4683,"mtime":1678056159733,"results":"36","hashOfConfig":"24"},{"size":2519,"mtime":1677275607772,"results":"37","hashOfConfig":"24"},{"size":3416,"mtime":1677275554276,"results":"38","hashOfConfig":"24"},{"size":506,"mtime":1677275471450,"results":"39","hashOfConfig":"24"},{"size":3526,"mtime":1677371933157,"results":"40","hashOfConfig":"24"},{"size":2224,"mtime":1677375634626,"results":"41","hashOfConfig":"24"},{"size":6675,"mtime":1678231491142,"results":"42","hashOfConfig":"24"},{"size":8607,"mtime":1678062855667,"results":"43","hashOfConfig":"24"},{"size":3057,"mtime":1678143759362,"results":"44","hashOfConfig":"24"},{"size":3683,"mtime":1678227683881,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1qvxa3u",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"49"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\index.js",[],[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\App.js",["117"],[],"import data from './data';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BrowserRouter, Link, Route, Routes } from 'react-router-dom';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Badge from 'react-bootstrap/Badge';\nimport Container from 'react-bootstrap/Container';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useContext } from 'react';\nimport { Store } from './Store';\nimport CartScreen from './screens/CartScreen';\nimport SigninScreen from './screens/SigninScreen';\nimport ShippingAddressScreen from './screens/ShippingScreen';\nimport SignupScreen from './screens/SignupScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport ProfileScreen from './screens/ProfileScreen';\n\nfunction App() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { cart, userInfo } = state;\n\n  const signoutHandler = () => {\n    ctxDispatch({ type: 'USER_SIGNOUT' });\n    ctxDispatch({ type: 'DELETE_SHIPPING_ADDRESS' });\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('shippingAddress');\n    localStorage.removeItem('paymentMethod');\n    window.location.href = '/signin';\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"d-flex flex-column site-container\">\n        <ToastContainer position=\"bottom-center\" limit={1} />\n        <header>\n          <Navbar className=\"nav-bar\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Container>\n              <LinkContainer to=\"/\">\n                <Navbar.Brand className=\"branding\">GameComplex</Navbar.Brand>\n              </LinkContainer>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"me-auto w-100 justify-content-end\">\n                  <Link to=\"/cart\" className=\"nav-link\">\n                    Cart\n                    {cart.cartItems.length > 0 && (\n                      <Badge pill bg=\"danger\">\n                        {cart.cartItems.reduce((a, c) => a + c.quantity, 0)}\n                      </Badge>\n                    )}\n                  </Link>\n                  {userInfo ? (\n                    <NavDropdown\n                      title={`Hello, ${userInfo.name}`}\n                      id=\"basic-nav-dropdown\"\n                    >\n                      <LinkContainer to=\"/profile\">\n                        <NavDropdown.Item>User Profile</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/orderhistory\">\n                        <NavDropdown.Item>Order History</NavDropdown.Item>\n                      </LinkContainer>\n                      <NavDropdown.Divider />\n                      <Link\n                        className=\"dropdown-item\"\n                        to=\"#signout\"\n                        onClick={signoutHandler}\n                      >\n                        Sign Out\n                      </Link>\n                    </NavDropdown>\n                  ) : (\n                    <Link className=\"nav-link\" to=\"/signin\">\n                      Sign in\n                    </Link>\n                  )}\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n        </header>\n        <main>\n          <Container className=\"mt-5\">\n            <Routes>\n              <Route path=\"/product/:slug\" element={<ProductScreen />} />\n              <Route path=\"/cart\" element={<CartScreen />} />\n              <Route path=\"/signin\" element={<SigninScreen />} />\n              <Route path=\"/shipping\" element={<ShippingAddressScreen />} />\n              <Route path=\"/signup\" element={<SignupScreen />} />\n              <Route path=\"/payment\" element={<PaymentScreen />} />\n              <Route path=\"/placeorder\" element={<PlaceOrderScreen />} />\n              <Route path=\"/order/:id\" element={<OrderScreen />} />\n              <Route path=\"/orderhistory\" element={<OrderHistoryScreen />} />\n              <Route path=\"/profile\" element={<ProfileScreen />} />\n              <Route path=\"/\" element={<HomeScreen />} />\n            </Routes>\n          </Container>\n        </main>\n        <footer>\n          <div className=\"text-center\">All Rights Reserved.</div>\n        </footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\data.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\HomeScreen.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\ProductScreen.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\components\\Product.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\components\\Rating.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\components\\LoadingBox.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\components\\MessageBox.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\utils.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\Store.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\CartScreen.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\SigninScreen.js",["118"],[],"import { Helmet } from 'react-helmet-async';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport { toast } from 'react-toastify';\r\nimport { getError } from '../utils';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nexport default function SigninScreen() {\r\n  const navigate = useNavigate();\r\n  const { search } = useLocation();\r\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\r\n  const redirect = redirectInUrl ? redirectInUrl : '/';\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const { data } = await Axios.post('api/users/signin', {\r\n        email,\r\n        password,\r\n      });\r\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n      navigate(redirect || '/');\r\n    } catch (err) {\r\n      toast.error(getError(err));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect);\r\n    }\r\n  }, [navigate, redirect, userInfo]);\r\n\r\n  return (\r\n    <Container className=\"small-container\">\r\n      <Helmet>\r\n        <title>Sign In</title>\r\n      </Helmet>\r\n      <h1 className=\"my-5\">Sign In</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            required\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <div className=\"mb-3\">\r\n          <Button type=\"submit\">Sign In</Button>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          New player?{' '}\r\n          <Link to={`/signup?redirect=${redirect}`}>Create your account</Link>\r\n        </div>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\ShippingScreen.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\SignupScreen.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\PaymentScreen.js",["119"],[],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport Container from 'react-bootstrap/esm/Container';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { Store } from '../Store';\r\n\r\nexport default function PaymentScreen() {\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const {\r\n    cart: { shippingAddress, paymentMethod },\r\n  } = state;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!shippingAddress.address) {\r\n      navigate('/shipping');\r\n    }\r\n  }, [navigate, shippingAddress]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodeName });\r\n    localStorage.setItem('paymentMethod', paymentMethodeName);\r\n    navigate('/placeorder');\r\n  };\r\n\r\n  const [paymentMethodeName, setPaymentMethod] = useState(\r\n    paymentMethod || 'PayPal'\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      <div className=\"container small-container\">\r\n        <Helmet>\r\n          <title>Select Your Payment Method</title>\r\n        </Helmet>\r\n        <h1 className=\"my-5\">Payment Method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <div className=\"mb-3\">\r\n            <Form.Check\r\n              type=\"radio\"\r\n              id=\"PayPal\"\r\n              label=\"PayPal\"\r\n              value=\"PayPal\"\r\n              checked={paymentMethodeName === 'PayPal'}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <Form.Check\r\n              type=\"radio\"\r\n              id=\"Stripe\"\r\n              label=\"Stripe\"\r\n              value=\"Stripe\"\r\n              checked={paymentMethodeName === 'Stripe'}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <Button type=\"submit\">Continue</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\PlaceOrderScreen.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\OrderScreen.js",[],[],"C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\OrderHistoryScreen.js",["120"],[],"import React, { useEffect, useReducer } from 'react';\r\nimport { useContext } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { Store } from '../Store';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport { getError } from '../utils';\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, orders: action.payload, loading: false };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default function OrderHistoryScreen() {\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const navigate = useNavigate();\r\n\r\n  const [{ loading, error, orders }, dispatch] = useReducer(reducer, {\r\n    loading: true,\r\n    error: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_REQUEST' });\r\n      try {\r\n        const { data } = await axios.get(`/api/orders/mine`, {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      } catch (err) {\r\n        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Order History</title>\r\n      </Helmet>\r\n      <h1>Order History</h1>\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>{order.totalPrice.toFixed(2)}</td>\r\n                <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\r\n                <td>\r\n                  {order.isDelivered\r\n                    ? order.deliveredAt.substring(0, 10)\r\n                    : 'No'}\r\n                </td>\r\n                <td>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"light\"\r\n                    onClick={() => {\r\n                      navigate(`/order/${order._id}`);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\chott\\OneDrive\\Desktop\\GitHub_Stuff\\ECommerce-Website\\frontend\\src\\screens\\ProfileScreen.js",[],[],{"ruleId":"121","severity":1,"message":"122","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":12},{"ruleId":"121","severity":1,"message":"125","line":11,"column":8,"nodeType":"123","messageId":"124","endLine":11,"endColumn":21},{"ruleId":"121","severity":1,"message":"126","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":17},{"ruleId":"121","severity":1,"message":"127","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":14},"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'CheckoutSteps' is defined but never used.","'Container' is defined but never used.","'Link' is defined but never used."]